<!-- Messages in the current talk: messages.html.ep -->
<h5 id="talk_topic" class="ui header">
  Talk:Here is the topik of the talk
</h5>
<div id="messages" class="ui segment">
  <div class="ui list">
  </div> <!-- end div class="ui list" -->

</div><!-- div class="ui segment" -->
  <!-- form for sending a message to the other person in the talk -->
<form id="message_form" name="message_form"
  class="ui form segment" action="<%= url_for($vest_base_url) %>" method="POST">
  <input type="hidden" name="from_uid" value="<%= $user->id %>" />
  <input type="hidden" name="to_uid" value="" />
  <input type="hidden" name="to_guid" value="" />
  <input type="hidden" name="subject" value="" />
  <input type="hidden" name="subject_message_id" value="" />
  <input type="hidden" name="message_assets" value="" /><!-- TODO -->
  <input type="hidden" name="sent" value="0" />
  <div class="field">
    <label>Message</label>
    <textarea name="message" autofocus="autofocus"></textarea>
    <button type="submit" class="ui button"><i class="send icon"></i>Submit</buton>
  </div>
</form><!-- form class="ui form segment" -->
<template id="message_template"
  ><p class="item" id="12345" title="">
      %# <!-- TODO: implement gravatars later <img class="ui avatar image" src=""> -->
  [<i class="date"></i>]
  <b class="from_uid_name">Бай Ганьо</b>
  <span class="message">Каза нещо</span>
</p>
</template>
<script>//<![CDATA[
// Functionality related to messages
"use strict";
jQuery(function($) {
  // to send or not to send the message?
  $('#message_form').submit(validate_and_send_message);
}); // end jQuery(function($)

/**
 * Validates the message form and sends the message.
 * @param {Event} e  Event passed by the binding
 * @return false
 */
function validate_and_send_message(e) {
    var form = e.target;
    var message_field = $('.field', form);

    message_field.removeClass('error')
    if (form.message.value == '') {
      message_field.addClass('error');
      $(form.message).attr('placeholder', 'PLease write your message!');
      return false;
    }
    //create a new talk from message if needed
    if(form.subject.value == ''){
      form.subject.value = form.message.value;
    }
    // See http://api.jquery.com/jQuery.post/
    $.post(
      form.action,
      $(form).serialize(),
      post_message_success
    ).fail(function(data) {
      //TODO: replace the alert with a beautiful SemanticUI popup or box
      alert("error:" + data.responseText);
      message_field.addClass('error');
      //console.log(data);
    });
    return false;
  } // end function validate_message(e){

/**
 * Prepares and inserts the message in the #messages box.
 * Executed upon succes of a sent message.
 * @param {Object} data the JSON returned by the server.
 */
function post_message_success(data) {
    // Prepare the sent message to be appended to the list of messages.
    var form = $('#message_form').get(0);
    var msg = {
      from_uid_name: '<%= $user->name %>',
      tstamp: new Date(),
      id: '0'
    };
    $.each(form, function(i) {
      msg[form[i].name] = form[i].value;
    });
    var last_i = VestTalk.json_messages.data.length - 1;
    var prev_msg = VestTalk.json_messages.data[last_i];
    var messages = $('#messages .ui.list');
    // fill in template and display the message
    fill_in_message_template(msg, prev_msg).appendTo(messages);
    // Scroll down to the last message
    messages.parent().scrollTop(messages.height());
    //clean the textarea and focus it.
    form['message'].value='';
    form['message'].focus();
  } // end function post_message_success(data)

/**
 * Gets new messages from a talk.
 * Similar to get_messages but only gets last 5 messages.
 * @param {obj} form The form object from which we will get everything we need.
 */
function get_new_messages(form) {
  var url = form.action + '/messages/' + form.subject_message_id.value +
    '.json?limit=5';
  $.get(url, append_messages_from_json, 'json');
}

/**
 * Gets new messages from a talk.
 * Similar to list_messages_from_json but only appends messages to the messages box.
 * @param {obj} form The form object from which we will get everything we need.
 */
function append_messages_from_json(new_json_messages) {
  //remove the local message
  $('#msg0').remove();
  var js_messages = new_json_messages.data;
  var messages = $('#messages .ui.list');
  for (var i in js_messages) {
    var msg = js_messages[i];
    //skip the parent message
    if (msg.subject_message_id == 0) {
      continue;
    }
    //append the new message
    if (document.getElementById('msg' + msg.id) === null) {
      var prev_msg = VestTalk.json_messages.data[VestTalk.json_messages.data.length -
        1];
      // fill in template and display the message
      fill_in_message_template(msg, prev_msg).appendTo(messages);
      VestTalk.json_messages.data.push(msg);
      // Scroll down to the last message
      messages.parent().scrollTop(messages.height());
    }
  } // end for( var i in...
}
//]]></script>
